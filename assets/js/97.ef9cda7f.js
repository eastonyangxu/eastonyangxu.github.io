(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{604:function(s,a,n){"use strict";n.r(a);var e=n(4),t=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"开始"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开始"}},[s._v("#")]),s._v(" 开始")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1.安装django：pip install django==4.1  (django4.1需要python3.8以上版本)\n2.创建django项目：django-admin startproject django_demo\n3.创建app：django-admin startapp admin (python manage.py startapp admin)\n4.为模型的改变生成迁移文件：python manage.py makemigrations admin  ,可以不指定app，执行所有app\n5.查看sql：python manage.py sqlmigrate admin 0001\n6.迁移数据库表到数据库中：python manage.py migrate admin    ,可以不指定app，执行所有app\n\n运行项目：\npython manage.py runserver (默认启用8000端口)\npython manage.py runserver 8080 (启用8080端口)\npython manage.py runserver 0.0.0.0:8080  (0.0.0.0可简写为0、监听所有服务器的公开IP)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h2",{attrs:{id:"requirements-txt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements-txt"}},[s._v("#")]),s._v(" requirements.txt")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成 requirements.txt")]),s._v("\npip freeze "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" requirements.txt\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装：")]),s._v("\npip "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" requirements.txt\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"models-field"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#models-field"}},[s._v("#")]),s._v(" models-Field")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://docs.djangoproject.com/zh-hans/4.1/ref/models/fields/#django.db.models.Field",target:"_blank",rel:"noopener noreferrer"}},[s._v("Field 相关文档"),a("OutboundLink")],1)]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Field常用参数：\n1.default：该字段的默认值。可以是一个值或者是个可调用的对象，如果是个可调用对象，每次实例化模型时都会调用该对象。\n\n2.primary_key：如果设置为 True ，将该字段设置为该模型的主键；有为模型中的任何字段指定 primary_key=True，Django 会自动添加一个字段来保存主键。\nprimary_key=True 意味着 null=False 和 unique=True。一个对象只允许有一个主键。主键字段是只读的。如果您改变了现有对象的主键值，然后将其保存，则会在旧对象旁边创建一个新对象。\n\n3.unique：如果设置为 True，这个字段必须在整个表中保持值唯一；当为 True 时，你不需要指定 db_index，因为 unique 意味着创建一个索引。\n\n4.verbose_name：字段注释\n\n5.validators：验证器，值为列表或元组，可以传多个验证方法/类 参考django自带的验证器：django\\core\\validators.py\n\n6.db_index：如果是 True，将为该字段创建数据库索引。\n\n7.db_column：自定义列名（自定义字段名）\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h2",{attrs:{id:"models-自定义-field"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#models-自定义-field"}},[s._v("#")]),s._v(" models-自定义 Field")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("文档：https://docs.djangoproject.com/zh-hans/4.1/howto/custom-model-fields/\n若自定义 Field 处理的数据结构比字符串，日期，整型，或浮点型更复杂，你可能需要重写 from_db_value() 和 to_python()。\n若要展示字段的子类， from_db_value() 将会在从数据库中载入的生命周期中调用，包括聚集和 values() 调用。\nto_python(value) 将值转换为正确的 Python 对象。它的作用与 value_to_string() 相反，并且在 clean() 中也被调用。\n使用数据库需要双向转换，如果你重写了 from_db_value() 方法，你也必须重写 get_prep_value() 将 Python 对象转回查询值。\n将查询值转为数据库值 get_db_prep_value() 实现了这种转换。\n万一自定义字段需要与普通查询参数使用的转换不同的转换规则，你可以重写 get_db_prep_save()。\nget_db_prep_save(value, connection)与 get_db_prep_value() 相同，但当字段值必须 保存 到数据库中时，会被调用。默认情况下返回 get_db_prep_value()。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h2",{attrs:{id:"单独运行-py-文件-如果有关联到-django-库-比如引用了-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单独运行-py-文件-如果有关联到-django-库-比如引用了-model"}},[s._v("#")]),s._v(" 单独运行 py 文件，如果有关联到 django 库，比如引用了 model")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" os\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" django\nos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("environ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("setdefault"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'DJANGO_SETTINGS_MODULE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ps.settings'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ndjango"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("setup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);